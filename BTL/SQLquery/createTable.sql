CREATE TABLE CUSTOMER
(
  CustomerID INT IDENTITY(1,1) NOT NULL,
  FirstName NVARCHAR(50) NOT NULL,
  LastName NVARCHAR(50) NOT NULL,
  PhoneNumber VARCHAR(10),
  Email VARCHAR(50),
  CONSTRAINT PK_CUSTOMER UNIQUE(CustomerID),
  CONSTRAINT UN_CUSTOMER_EMAIL UNIQUE (Email),
  CONSTRAINT CHECK_CUSTOMER_PHONENUMBER CHECK(PhoneNumber like '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
);

CREATE TABLE STAFF (
  StaffID INT NOT NULL,
  FirstName NVARCHAR(50) NOT NULL,
  LastName NVARCHAR(50) NOT NULL,
  DateStartWork DATE NOT NULL,
  RoleStaff NVARCHAR(50) NOT NULL,
  PhoneNumber VARCHAR(10) NOT NULL,
  Salary BIGINT NOT NULL,
  Allowance INT DEFAULT 0, 
  CONSTRAINT PK_STAFF PRIMARY KEY (StaffID),
  CONSTRAINT UN_STAFF_PHONENUMBER UNIQUE (PhoneNumber),
  CONSTRAINT CHECK_STAFF_PHONENUMBER CHECK(PhoneNumber LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
  CONSTRAINT CHECK__STAFF_DATESTARTWORK CHECK(DateStartWork <= GETDATE())
);

CREATE TABLE ORDERS
(
  OrderID INT NOT NULL,
  CustomerID INT NOT NULL,
  StaffID INT NOT NULL,
  OrderDate DATE NOT NULL,
  StatusOrders NVARCHAR(50) NOT NULL,
  LocationOrders NVARCHAR(255) NOT NULL,
  TotalPrice FLOAT NOT NULL,
  ShipVia INT DEFAULT 0,
  CONSTRAINT PK_ORDERS PRIMARY KEY (OrderID),
  CONSTRAINT FK_ORDERS_CUSTOMER FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID),
  CONSTRAINT FK_ORDERS_STAFF FOREIGN KEY (StaffID) REFERENCES STAFF(StaffID),
  CONSTRAINT CHECK_ORDERS_DATESTARTWORK CHECK(OrderDate <= GETDATE()),
);

CREATE TABLE PRODUCT
(
  ProductID INT NOT NULL,
  TypeProduct NVARCHAR(50) NOT NULL,
  ProductName NVARCHAR(100) NOT NULL,
  Size NCHAR(1),
  Price FLOAT NOT NULL,
  CONSTRAINT PK_PRODUCT PRIMARY KEY (ProductID),
  CONSTRAINT UN__PRODUCT_PRODUCTNAME UNIQUE (ProductName)
);

CREATE TABLE ORDERDETAIL
(  
  ProductID INT NOT NULL,
  OrderID INT NOT NULL,
  Price FLOAT NOT NULL,
  Quantity INT NOT NULL,
  TotalPrice AS (Price * Quantity),
  CONSTRAINT PK_ORDERDETAIL PRIMARY KEY (ProductID, OrderID),
  CONSTRAINT FK_ORDERDETAIL_PRODUCT FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID),
  CONSTRAINT FK_ORDERDETAIL_ORDERS FOREIGN KEY (OrderID) REFERENCES ORDERS(OrderID)
);

CREATE TABLE SUPPLIER
(
  SupplierID INT NOT NULL,
  SupplierName NVARCHAR(50) NOT NULL,
  Email VARCHAR(50) NOT NULL,
  PhoneNumber VARCHAR(10) NOT NULL,
  TradingName NVARCHAR(50) NOT NULL,
  CONSTRAINT PK_SUPPLIER PRIMARY KEY (SupplierID),
  CONSTRAINT UN_SUPPLIER_PHONENUMBER UNIQUE (PhoneNumber),
  CONSTRAINT UN_SUPPLIER_EMAIL UNIQUE (Email),
  CONSTRAINT CHECK_SUPPLIER_PHONENUMBER CHECK(PhoneNumber like '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
);

CREATE TABLE ITEM
(
  ItemID INT NOT NULL,
  SupplierID INT NOT NULL,
  ItemName NVARCHAR(100) NOT NULL,
  TypeItem NVARCHAR(50) NOT NULL,
  SupplyDate DATE NOT NULL,
  CONSTRAINT PK_ITEM PRIMARY KEY (ItemID),
  CONSTRAINT FK_ITEM_SUPPLIER FOREIGN KEY (SupplierID) REFERENCES SUPPLIER(SupplierID),
  CONSTRAINT CHECK_ITEM_DATESTARTWORK CHECK(SupplyDate <= GETDATE())
);


CREATE TABLE USED_IN
(
  ProductID INT NOT NULL,
  ItemID INT NOT NULL,
  ItemWeight NVARCHAR(50) NOT NULL,
  CONSTRAINT PK_USED_IN PRIMARY KEY (ProductID, ItemID),
  CONSTRAINT FK_USED_IN_PRODUCT FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID),
  CONSTRAINT FK_USED_IN_ITEM FOREIGN KEY (ItemID) REFERENCES ITEM(ItemID)
);

